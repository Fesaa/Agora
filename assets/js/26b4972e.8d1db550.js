"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[994],{1351:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"guides/open-id-connect","title":"Open Id Connect","description":"Agora does not have any user/account management included, you are expected to configure your own.","source":"@site/docs/guides/open-id-connect.md","sourceDirName":"guides","slug":"/guides/open-id-connect","permalink":"/Agora/docs/guides/open-id-connect","draft":false,"unlisted":false,"editUrl":"https://github.com/Fesaa/Agora/tree/master/UI/documentation/docs/guides/open-id-connect.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Quick Start","permalink":"/Agora/docs/quick-start"},"next":{"title":"Roles and Permissions","permalink":"/Agora/docs/guides/roles-and-permissions"}}');var s=o(4848),r=o(8453);const i={},c="Open Id Connect",a={},d=[{value:"Expected layout",id:"expected-layout",level:2},{value:"Known issues",id:"known-issues",level:2},{value:"Limitations",id:"limitations",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"open-id-connect",children:"Open Id Connect"})}),"\n",(0,s.jsx)(n.p,{children:"Agora does not have any user/account management included, you are expected to configure your own.\nThis can be a KeyCloak instance, Microsoft, anything that follows the OpenId Connect protocol."}),"\n",(0,s.jsx)(n.h2,{id:"expected-layout",children:"Expected layout"}),"\n",(0,s.jsx)(n.p,{children:"Agora expects the following layout;"}),"\n",(0,s.jsxs)(n.p,{children:["2 clients; one for the backend (",(0,s.jsx)(n.code,{children:"agora-api"}),") and one for the WPA (",(0,s.jsx)(n.code,{children:"agora"}),"). The ",(0,s.jsx)(n.code,{children:"agora"})," client\nshould grant an audience to ",(0,s.jsx)(n.code,{children:"agora-api"}),". Permissions are given by granted the correct roles to users; see ",(0,s.jsx)(n.a,{href:"./roles-and-permissions",children:"Roles and Permissions"}),"\nfor more information."]}),"\n",(0,s.jsx)(n.h2,{id:"known-issues",children:"Known issues"}),"\n",(0,s.jsx)(n.p,{children:"Currently, a lot of your OpenId Connect configuration is hardcoded. We want to open this up, so have more freedom."}),"\n",(0,s.jsx)(n.h3,{id:"limitations",children:"Limitations"}),"\n",(0,s.jsxs)(n.p,{children:["Only providers that include roles in the same way as ",(0,s.jsx)(n.code,{children:"KeyCloak"})," are ",(0,s.jsx)(n.code,{children:"Azure"})," will currently work. If you are a developer\nand want support for another scheme; checkout ",(0,s.jsx)(n.a,{href:"../dev/contributing",children:"contributing"})," and ",(0,s.jsx)(n.a,{href:"../dev/local-open-id-connect#others",children:"Dev Notes on OpenIdConnect"})]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>c});var t=o(6540);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);