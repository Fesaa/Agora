"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[501],{8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>i});var o=r(6540);const s={},l=o.createContext(s);function t(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),o.createElement(l.Provider,{value:n},e.children)}},9298:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"dev/local-open-id-connect","title":"Locally hosted OpenId Connect server","description":"Agora requires you to set up an OpenId Connect provider,","source":"@site/docs/dev/local-open-id-connect.md","sourceDirName":"dev","slug":"/dev/local-open-id-connect","permalink":"/Agora/docs/dev/local-open-id-connect","draft":false,"unlisted":false,"editUrl":"https://github.com/Fesaa/Agora/tree/master/UI/documentation/docs/dev/local-open-id-connect.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Contributing","permalink":"/Agora/docs/dev/contributing"}}');var s=r(4848),l=r(8453);const t={},i="Locally hosted OpenId Connect server",c={},a=[{value:"KeyCloak",id:"keycloak",level:2},{value:"Setup",id:"setup",level:3},{value:"Others",id:"others",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"locally-hosted-openid-connect-server",children:"Locally hosted OpenId Connect server"})}),"\n",(0,s.jsx)(n.p,{children:"Agora requires you to set up an OpenId Connect provider,\r\nthis is also true for development as local account are not a thing."}),"\n",(0,s.jsxs)(n.p,{children:["While you can set up any you want, as long as it follows the structure as explained ",(0,s.jsx)(n.a,{href:"../guides/open-id-connect",children:"here"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"keycloak",children:"KeyCloak"}),"\n",(0,s.jsx)(n.p,{children:"We've used a keycloak (dev) instance in docker during development."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'services:\r\n  keycloak:\r\n    image: quay.io/keycloak/keycloak\r\n    container_name: keycloak\r\n    environment:\r\n      - KEYCLOAK_ADMIN=admin\r\n      - KEYCLOAK_ADMIN_PASSWORD=admin\r\n      - KEYCLOAK_HTTP_PORT=8080\r\n    ports:\r\n      - "8080:8080"\r\n    command:\r\n      - start-dev\r\n    volumes:\r\n      - keycloak_h2_data:/opt/keycloak/data/\r\n    restart: always\r\n\r\nvolumes:\r\n  keycloak_h2_data:\n'})}),"\n",(0,s.jsx)(n.h3,{id:"setup",children:"Setup"}),"\n",(0,s.jsx)(n.p,{children:"With the following setup steps,"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Loging (admin, admin)"}),"\n",(0,s.jsx)(n.li,{children:"Create new realm"}),"\n",(0,s.jsxs)(n.li,{children:["Create agora client","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"LEAVE client auth off"}),"\n",(0,s.jsxs)(n.li,{children:["root: ",(0,s.jsx)(n.a,{href:"http://localhost:4200",children:"http://localhost:4200"})]}),"\n",(0,s.jsxs)(n.li,{children:["redirect: ",(0,s.jsx)(n.a,{href:"http://localhost:4200/callback",children:"http://localhost:4200/callback"})]}),"\n",(0,s.jsxs)(n.li,{children:["origin: ",(0,s.jsx)(n.a,{href:"http://localhost:4200",children:"http://localhost:4200"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Create client scope","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["name doesn't matter, I use ",(0,s.jsx)(n.code,{children:"agora-audience"})]}),"\n",(0,s.jsxs)(n.li,{children:["add mapper","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"by configuration"}),"\n",(0,s.jsx)(n.li,{children:"audience"}),"\n",(0,s.jsxs)(n.li,{children:["name: ",(0,s.jsx)(n.code,{children:"agora"})," (can be whatever)"]}),"\n",(0,s.jsxs)(n.li,{children:["include Client Audience: ",(0,s.jsx)(n.code,{children:"agora"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["In ",(0,s.jsx)(n.code,{children:"agora"})," client","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Client scopes"}),"\n",(0,s.jsx)(n.li,{children:"Add client scope"}),"\n",(0,s.jsxs)(n.li,{children:["Select ",(0,s.jsx)(n.code,{children:"agora-audience"})]}),"\n",(0,s.jsx)(n.li,{children:"Set default"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Choose ",(0,s.jsx)(n.code,{children:"KeyCloak"})," as provider, and set url to ",(0,s.jsx)(n.code,{children:"http://localhost:8080/realms/<your-realm-name>"})," on first setup screen"]}),"\n",(0,s.jsxs)(n.li,{children:["Roles for authorization","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["In ",(0,s.jsx)(n.code,{children:"agora"})," client -> roles"]}),"\n",(0,s.jsxs)(n.li,{children:["Add wanted roles -> See ",(0,s.jsx)(n.a,{href:"../guides/roles-and-permissions",children:"Roles and permissions"})]}),"\n",(0,s.jsx)(n.li,{children:"To your user, add the role"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"others",children:"Others"}),"\n",(0,s.jsxs)(n.p,{children:["As mentioned above, other providers should work fine if they include roles like ",(0,s.jsx)(n.code,{children:"KeyCloak"})," or ",(0,s.jsx)(n.code,{children:"Azure"})," in the JWT token.\r\nYou can find the ClaimsTransformers ",(0,s.jsx)(n.a,{href:"https://github.com/Fesaa/Agora/tree/master/API/Helpers/RoleClaimTransformers",children:"here"}),". If you've got a working configuration; don't hesitate to edit this page."]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);